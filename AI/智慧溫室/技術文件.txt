首先讀取2筆訓練資料，以及1筆測試資料，訓練資料2筆分別為感測值資料(輸入資料)，
以及動作直資料(輸出資料)，而測試資料為1筆感測值資料(輸入資料)，程式最後希望能預測出測試資料的動作值。

因為在感測值資料中有時間資料，而時間屬於文字字串，所以利用LabelEncoder對時間文字進行編碼，好讓電腦進行訓練。
在對資料進行LabelEncoder編碼後，必須在使用reshape把感測值的訓練資料以及測試資料轉換成3維，
因為RNN輸入的資料格式為3維，分別是(樣本數，時間長度，資料特徵數)。

接下來我們使用了convert_to_integer函式，並對動作值資料(輸入資料)進行資料處理。
處裡內容為:
	原本動作值資料(輸出資料)一共有4列，分別為1到4，每一個都代表不同的感測器，且1到4的值不是1就是0，0代表關閉，1代表開啟
	例如:0101代表1號是關閉，2號是開啟，3號是關閉，4號是開啟。
	因為所有數值不是1就是0，所以可以把動作值資料(輸出資料)的每1行看成是1組2進位數字，再用convert_to_integer函式把每1行
	4個數字的2進位轉成1個數字的10進位，再用to_categorical把已經轉成10進位的動作值資料(輸出資料)進行編碼，好讓電腦看懂，方便訓練。

再來就是建立序列模型物件，1共有3層，第一層為輸入層，需要指定input_dim參數，這邊用(1,8)，1為時間長度，8為資料特徵數，
使用的啟動函數為relu。第二層跟第三層都為密集層，輸出神經元為14。優化器為rmsprop，損失函數為binary_crossentropy，評量準則為acc。

模型訓練週期為20，指定批次大小為144，因為每天的資料大約144筆。

最後用測試資料進行測試，但因為前面有用convert_to_integer函式把動作值由二進位轉時進位，所以測試書來的結果也為十進位，
因此還必須再用integer_to_features函示把十進位轉成原本的二進位，再把資料存成csv。